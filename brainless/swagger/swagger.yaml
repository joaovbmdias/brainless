swagger: "2.0"
info:
  description: Swagger file for the Brainless API
  version: "1.0.0"
  title: Swagger REST Article
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

# Paths supported by the server application
paths:
###############################################################################################################################
###############################################################################################################################
################################################            USERS             #################################################
###############################################################################################################################
###############################################################################################################################
  /users:
    # get:
    #   operationID: "users.read"
    #   tags: 
    #      - "Users"
    #   summary: "API operation for user retrieval"
    #   description: "Reads one user data with provided ID"
    #   parameters:
    #     - name: user_id
    #       in: body
    #       description: Id of the user to get
    #       type: integer
    #       required: True
    #   responses:
    #    200:
          # description: "Successfully read user"
          # schema:
          #   type: array
          #   items:
          #     properties:
          #       username:
          #         type: string
          #       first_name:
          #         type: string
          #       last_name:
          #         type: string
    post:
      operationId: "users.create"
      tags:
         - "Users"
      summary: "API operation for user creation"
      description: "Creates one user with the provided information payload"
      parameters:
        - name: user
          in: body
          description: User to create
          required: True
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
              first_name:
                type: string
              last_name:
                type: string
      responses:
        201:
          description: "Successfully created the user"
          schema:
            type: integer
      x-swagger-router-controller: "controllers"
###############################################################################################################################
###############################################################################################################################
###############################################            ACCOUNTS             ###############################################
###############################################################################################################################
###############################################################################################################################
  /users/{user_id}/accounts/{account_id}:
    get:
      operationId: "accounts.read"
      tags:
        - "Accounts"
      summary: "API operation for account retrieval"
      description: "Retrieves one third party account data with the provided ID"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
      responses:
        200:
          description: "Sucessfully retrieved account information"
          schema:
            type: array
            items:
              properties:
                account_id:
                  type: integer
                name:
                  type: string
                provider:
                  type: string
                client_id:
                  type: string
                client_secret:
                  type: string
      x-swagger-router-controller: "controllers"
    put:
      operationId: "accounts.update"
      tags:
         - "Accounts"
      summary: "API operation for account update"
      description: "Updates one third party account with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "account"
          in: body
          description: "Account to update"
          required: True
          schema:
            type: object
            properties:
              account_id:
                type: integer
              name:
                type: string
              provider:
                type: string
              user_id:
                type: integer
              client_id:
                type: string
              client_secret:
                type: string
      responses:
        201:
          description: "Successfully updated the account"
      x-swagger-router-controller: "controllers"
    delete:
      operationId: "accounts.delete"
      tags:
         - "Accounts"
      summary: "API operation for account deletion"
      description: "Deletes one third party account with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
      responses:
        200:
          description: "Successfully deleted the account"
      x-swagger-router-controller: "controllers"
  /users/{user_id}/accounts:
    get:
      operationId: "accounts.search"
      tags:
        - "Accounts"
      summary: "API operation for account retrieval"
      description: "Retrieves one or several third party accounts data with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
      responses:
        200:
          description: "Sucessfully retrieved account information"
          schema:
            type: array
            items:
              properties:
                account_id:
                  type: integer
                name:
                  type: string
                provider:
                  type: string
                client_id:
                  type: string
                client_secret:
                  type: string
      x-swagger-router-controller: "controllers"
    post:
      operationId: "accounts.create"
      tags:
         - "Accounts"
      summary: "API operation for account creation"
      description: "Creates one third party account with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account"
          in: body
          description: "Account to create"
          required: True
          schema:
            type: object
            properties:
              name:
                type: string
              provider:
                type: string
              user_id:
                type: integer
              account_type:
                type: string
              client_id:
                type: string
              client_secret:
                type: string
      responses:
        201:
          description: "Successfully created the account"
          schema:
            type: object
            properties:
              account_id:
                type: integer
      x-swagger-router-controller: "controllers"
###############################################################################################################################
###############################################################################################################################
################################################            EVENTS             ################################################
###############################################################################################################################
###############################################################################################################################
  /users/{user_id}/accounts/{account_id}/events/{event_id}:
    get:
      operationId: "events.read"
      tags:
        - "Events"
      summary: "API operation for event retrieval"
      description: "Retrieves one event related to a third party account with the provided ID"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "event_id"
          in: path
          description: "ID of the event"
          required: True
          type: integer
      responses:
        200:
          description: "Sucessfully retrieved event information"
          schema:
            type: array
            items:
              properties:
                account_id:
                  type: integer
                title:
                  type: string
                start_datetime:
                  type: string
                end_datetime:
                  type: string
                guid:
                  type: string
      x-swagger-router-controller: "controllers"
    put:
      operationId: "events.update"
      tags:
         - "Events"
      summary: "API operation for event update"
      description: "Updates one event realted to a third party account with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "event_id"
          in: path
          description: "ID of the event"
          required: True
          type: integer
        - name: "event"
          in: body
          description: "Event to update"
          required: True
          schema:
            type: object
            properties:
              event_id:
                type: integer
              title:
                type: string
              start_datetime:
                type: string
              end_datetime:
                type: string
              guid:
                type: string
              account_id:
                type: integer
      responses:
        201:
          description: "Successfully updated the event"
      x-swagger-router-controller: "controllers"
    delete:
      operationId: "events.delete"
      tags:
         - "Events"
      summary: "API operation for event deletion"
      description: "Deletes one event related to a third party account with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "event_id"
          in: path
          description: "ID of the event"
          required: True
          type: integer
      responses:
        200:
          description: "Successfully deleted the event"
      x-swagger-router-controller: "controllers"
  /users/{user_id}/accounts/{account_id}/events:
    get:
      operationId: "events.search"
      tags:
        - "Events"
      summary: "API operation for event retrieval"
      description: "Retrieves one or several events related to third party accounts with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
      responses:
        200:
          description: "Sucessfully retrieved event information"
          schema:
            type: array
            items:
              properties:
                account_id:
                  type: integer
                title:
                  type: string
                start_datetime:
                  type: string
                end_datetime:
                  type: string
                guid:
                  type: string
      x-swagger-router-controller: "controllers"
    post:
      operationId: "events.create"
      tags:
         - "Events"
      summary: "API operation for event creation"
      description: "Creates one event with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the event's account"
          required: True
          type: integer
        - name: "event"
          in: body
          description: "Event to create"
          required: True
          schema:
            type: object
            properties:
              title:
                type: string
              start_datetime:
                type: string
              end_datetime:
                type: string
              guid:
                type: string
              account_id:
                type: integer
      responses:
        201:
          description: "Successfully created the event"
          schema:
            type: integer
      x-swagger-router-controller: "controllers"
###############################################################################################################################
###############################################################################################################################
###############################################            PROJECTS             ###############################################
###############################################################################################################################
###############################################################################################################################
  /users/{user_id}/accounts/{account_id}/projects/{project_id}:
    get:
      operationId: "projects.read"
      tags:
        - "Projects"
      summary: "API operation for project retrieval"
      description: "Retrieves one project related to a third party account with the provided ID"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "project_id"
          in: path
          description: "ID of the project"
          required: True
          type: integer
      responses:
        200:
          description: "Sucessfully retrieved project information"
          schema:
            type: array
            items:
              properties:
                account_id:
                  type: integer
                name:
                  type: string
                guid:
                  type: string
      x-swagger-router-controller: "controllers"
    put:
      operationId: "projects.update"
      tags:
         - "Projects"
      summary: "API operation for project update"
      description: "Updates one project realted to a third party account with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "project_id"
          in: path
          description: "ID of the project"
          required: True
          type: integer
        - name: "project"
          in: body
          description: "Project to update"
          required: True
          schema:
            type: object
            properties:
              account_id:
                type: integer
              name:
                type: string
              guid:
                type: string
      responses:
        201:
          description: "Successfully updated the project"
      x-swagger-router-controller: "controllers"
    delete:
      operationId: "projects.delete"
      tags:
         - "Projects"
      summary: "API operation for project deletion"
      description: "Deletes one project related to a third party account with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "project_id"
          in: path
          description: "ID of the project"
          required: True
          type: integer
      responses:
        200:
          description: "Successfully deleted the project"
      x-swagger-router-controller: "controllers"
  /users/{user_id}/accounts/{account_id}/projects:
    get:
      operationId: "projects.search"
      tags:
        - "Projects"
      summary: "API operation for project retrieval"
      description: "Retrieves one or several projects related to third party accounts with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
      responses:
        200:
          description: "Sucessfully retrieved project information"
          schema:
            type: array
            items:
              properties:
                account_id:
                  type: integer
                name:
                  type: string
                guid:
                  type: string
      x-swagger-router-controller: "controllers"
    post:
      operationId: "projects.create"
      tags:
         - "Projects"
      summary: "API operation for project creation"
      description: "Creates one project with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the project's account"
          required: True
          type: integer
        - name: "project"
          in: body
          description: "Project to create"
          required: True
          schema:
            type: object
            properties:
              account_id:
                type: integer
              name:
                type: string
              guid:
                type: string
      responses:
        201:
          description: "Successfully created the project"
          schema:
            type: integer
      x-swagger-router-controller: "controllers"
###############################################################################################################################
###############################################################################################################################
#################################################            TASKS             ################################################
###############################################################################################################################
###############################################################################################################################
  /users/{user_id}/accounts/{account_id}/projects/{project_id}/tasks/{task_id}:
    get:
      operationId: "tasks.read"
      tags:
        - "Tasks"
      summary: "API operation for task retrieval"
      description: "Retrieves one task with the provided ID"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "project_id"
          in: path
          description: "ID of the project"
          required: True
          type: integer
        - name: "task_id"
          in: path
          description: "ID of the task"
          required: True
          type: integer
      responses:
        200:
          description: "Sucessfully retrieved task information"
          schema:
            type: array
            items:
              properties:
                task_id:
                  type: integer
                title:
                  type: string
                project_id:
                  type: integer
                due_datetime:
                  type: string
                priority:
                  type: integer
                guid:
                  type: string
      x-swagger-router-controller: "controllers"
    put:
      operationId: "tasks.update"
      tags:
         - "Tasks"
      summary: "API operation for task update"
      description: "Updates one task with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "project_id"
          in: path
          description: "ID of the project"
          required: True
          type: integer
        - name: "task_id"
          in: path
          description: "ID of the task"
          required: True
          type: integer
        - name: "task"
          in: body
          description: "Task to update"
          required: True
          schema:
            type: object
            properties:
              task_id:
                type: integer
              title:
                type: string
              project_id:
                type: integer
              due_datetime:
                type: string
              priority:
                type: integer
              guid:
                type: string
      responses:
        201:
          description: "Successfully updated the task"
      x-swagger-router-controller: "controllers"
    delete:
      operationId: "tasks.delete"
      tags:
         - "Tasks"
      summary: "API operation for task deletion"
      description: "Deletes one task with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "project_id"
          in: path
          description: "ID of the project"
          required: True
          type: integer
        - name: "task_id"
          in: path
          description: "ID of the task"
          required: True
          type: integer
      responses:
        200:
          description: "Successfully deleted the task"
      x-swagger-router-controller: "controllers"
  /users/{user_id}/accounts/{account_id}/projects/{project_id}/tasks:
    get:
      operationId: "tasks.search"
      tags:
        - "Tasks"
      summary: "API operation for task retrieval"
      description: "Retrieves one or several tasks with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "project_id"
          in: path
          description: "ID of the project"
          required: True
          type: integer
      responses:
        200:
          description: "Sucessfully retrieved task information"
          schema:
            type: array
            items:
              properties:
                task_id:
                  type: integer
                title:
                  type: string
                project_id:
                  type: integer
                due_datetime:
                  type: string
                priority:
                  type: integer
                guid:
                  type: string
      x-swagger-router-controller: "controllers"
    post:
      operationId: "tasks.create"
      tags:
         - "Tasks"
      summary: "API operation for task creation"
      description: "Creates one task with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the project's account"
          required: True
          type: integer
        - name: "project_id"
          in: path
          description: "ID of the project"
          required: True
          type: integer
        - name: "task"
          in: body
          description: "Event to create"
          required: True
          schema:
            type: object
            properties:
              title:
                type: string
              project_id:
                type: integer
              due_datetime:
                type: string
              priority:
                type: integer
              guid:
                type: string
      responses:
        201:
          description: "Successfully created the task"
          schema:
            type: integer
      x-swagger-router-controller: "controllers"
###############################################################################################################################
###############################################################################################################################
#################################################            Labels             ###############################################
###############################################################################################################################
###############################################################################################################################
  /users/{user_id}/accounts/{account_id}/labels/{label_id}:
    get:
      operationId: "labels.read"
      tags:
        - "Labels"
      summary: "API operation for label retrieval"
      description: "Retrieves one label with the provided ID"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "label_id"
          in: path
          description: "ID of the label"
          required: True
          type: integer
      responses:
        200:
          description: "Sucessfully retrieved label information"
          schema:
            type: array
            items:
              properties:
                labek_id:
                  type: integer
                title:
                  type: string
                guid:
                  type: string
      x-swagger-router-controller: "controllers"
    put:
      operationId: "labels.update"
      tags:
         - "Labels"
      summary: "API operation for label update"
      description: "Updates one label with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "label_id"
          in: path
          description: "ID of the label"
          required: True
          type: integer
        - name: "label"
          in: body
          description: "Label to update"
          required: True
          schema:
            type: object
            properties:
              label_id:
                type: integer
              title:
                type: string
              guid:
                type: string
              account_id:
                type: integer
      responses:
        201:
          description: "Successfully updated the label"
      x-swagger-router-controller: "controllers"
    delete:
      operationId: "labels.delete"
      tags:
         - "Labels"
      summary: "API operation for label deletion"
      description: "Deletes one label with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
        - name: "label_id"
          in: path
          description: "ID of the label"
          required: True
          type: integer
      responses:
        200:
          description: "Successfully deleted the label"
      x-swagger-router-controller: "controllers"
  /users/{user_id}/accounts/{account_id}/labels:
    get:
      operationId: "labels.search"
      tags:
        - "Labels"
      summary: "API operation for label retrieval"
      description: "Retrieves one or several labels with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the account"
          required: True
          type: integer
      responses:
        200:
          description: "Sucessfully retrieved label information"
          schema:
            type: array
            items:
              properties:
                label_id:
                  type: integer
                title:
                  type: string
                guid:
                  type: string
      x-swagger-router-controller: "controllers"
    post:
      operationId: "labels.create"
      tags:
         - "Labels"
      summary: "API operation for label creation"
      description: "Creates one label with the provided information payload"
      parameters:
        - name: "user_id"
          in: path
          description: "ID of the account owner"
          required: True
          type: integer
        - name: "account_id"
          in: path
          description: "ID of the project's account"
          required: True
          type: integer
        - name: "label"
          in: body
          description: "Label to create"
          required: True
          schema:
            type: object
            properties:
              title:
                type: string
              guid:
                type: string
              account_id:
                type: integer
      responses:
        201:
          description: "Successfully created the label"
          schema:
            type: integer
      x-swagger-router-controller: "controllers"
